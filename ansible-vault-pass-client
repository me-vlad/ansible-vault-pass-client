#!/usr/bin/env python3

"""
A script that allows to keep Ansible Vault passwords in a gpg encrypted files
managed by pass (https://www.passwordstore.org) or compatible password managers
like gopass (https://www.gopass.pw).
"""

import argparse
import configparser
import subprocess
import sys
import os

# Password manager to use (pass or gopass)
pass_command = "pass"


def get_ansible_config_file():
    try:
        import ansible

        return ansible.constants.CONFIG_FILE
    except ImportError:
        pass

    try:
        return os.environ["ANSIBLE_CONFIG"]
    except KeyError:
        pass

    cfg_curr_dir = os.path.join(os.getcwd(), "ansible.cfg")
    if os.path.isfile(cfg_curr_dir):
        return cfg_curr_dir

    cfg_home_dir = os.path.expanduser("~/.ansible.cfg")
    if os.path.isfile(cfg_home_dir):
        return cfg_home_dir

    return "/etc/ansible/ansible.cfg"


def get_vault_id():
    # Get passwordstore name from '--vault-id' CLI option
    parser = argparse.ArgumentParser(
        description="Get a vault password from passwordstore",
        epilog="Please read the README.md file for more info.",
        allow_abbrev=False,
    )

    parser.add_argument(
        "--vault-id",
        action="store",
        default="default",
        dest="vault_id",
        help="passwordstore containing the vault password",
    )

    vault_id = parser.parse_args().vault_id.strip()

    return vault_id


def get_config_passwordstore():
    ansible_config_file = get_ansible_config_file()

    # Get passwordstore name from Ansible config file
    if ansible_config_file:
        try:
            # Read Ansible config
            config = configparser.ConfigParser()
            config.read(ansible_config_file)
            # Get passwordstore name from Ansible config
            passwordstore = config.get("vault", "passwordstore", fallback="").strip()
        except configparser.NoOptionError:
            pass
        except configparser.NoSectionError:
            pass
    else:
        pass
    return passwordstore


def main():
    vault_id = get_vault_id()
    if vault_id != "default" and vault_id != "":
        passwordstore = vault_id
    else:
        passwordstore = get_config_passwordstore()

    if passwordstore:
        password = (
            subprocess.check_output([pass_command, passwordstore])
            .strip()
            .decode("UTF-8")
        )
        print(password, end="")
        exit(0)
    else:
        print(
            "Couldn't get passwordstore settings from Ansible config file or --vault-id option!\n"
            "Please read the README.md file for more info about script settings.",
            file=sys.stderr,
        )
        exit(1)


if __name__ == "__main__":
    main()
